# vim: ai et ts=2 st=2 sw=2 :
---
- name: is dnf or not
  set_fact:
    is_dnf: '{{ ansible_distribution_major_version | int > 7 }}'

# add repos

- name: add repositories
  yum_repository:
    file: ansible
    name: '{{ item.name }}'
    description: '{{ item.description }}'
    baseurl: '{{ item.baseurl }}'
    gpgkey: '{{ item.gpgkey }}'
    state: '{{ "present" if item.enabled | bool else "absent" }}'
  loop: '{{ packages_centos_repositories }}'

# exclude packages

- name: exclude yum packages
  ini_file:
    path: /etc/yum.conf
    section: main
    option: exclude
    value: '{{ packages_centos_exclude | join(" ")  }}'
    mode: 0644
  when: not is_dnf

- name: exclude dnf packages
  ini_file:
    path: /etc/dnf/dnf.conf
    section: main
    option: exclude
    value: '{{ packages_centos_exclude | join(" ")  }}'
    mode: 0644
  when: is_dnf

# install packges

- name: install yum packages
  yum:
    name: '{{ packages_centos_install }}'
  when: not is_dnf

- name: install dnf packages
  dnf:
    name: '{{ packages_centos_install }}'
  when: is_dnf

# unattended_upgrades

- name: set config options for automatic update
  set_fact:
    config_file:
      dnf: /etc/dnf/automatic.conf
      yum: /etc/yum/yum-cron.conf
    update_strategy_key:
      dnf: upgrade_type
      yum: update_cmd
    update_strategy: '{{ "security" if packages_only_security_upgrades else "default"  }}'
    dnf_or_yum: '{{ "dnf" if is_dnf else "yum" }}'

- name: install dnf-automatic or yum-cron
  package:
    name: '{{ "dnf-automatic" if is_dnf else "yum-cron" }}'

- name: update configuration
  ini_file:
    path: '{{ config_file[ dnf_or_yum ] }}'
    section: '{{ item.s }}'
    option: '{{ item.o }}'
    value: '{{ item.v }}'
    mode: 0644
  loop:
    - "{{ { 's': 'commands', 'o': update_strategy_key[dnf_or_yum], 'v': update_strategy } }}"
    - { 's': 'commands', 'o': 'apply_updates', 'v': 'yes' }
    - { 's': 'commands', 'o': 'random_sleep', 'v': 360 }


- name: enable dnf-automatic
  systemd:
    name: dnf-automatic.timer
    state: started
    enabled: true
  when: is_dnf

- name: enable yum-cron
  service:
    name: yum-cron
    state: started
    enabled: true
  when: not is_dnf

- name: add cronjob for reboot on centos 7 and up
  cron:
    name: automatic reboot after kernel upgrade and so on
    hour: '{{ packages_automatic_reboot_hour|string }}'
    minute: '{{ packages_automatic_reboot_minute|string }}'
    job: |
      needs-restarting -r &> /dev/null || shutdown -r 1
    state: '{{ "present" if packages_automatic_reboot else "absent" }}'
  when: ansible_distribution_major_version|int > 6
